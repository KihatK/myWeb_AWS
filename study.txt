express js에서 req.user가 틀렸다고 할 땐
types/express에 index.d.ts에
import User from '../../models/user';

declare module 'express-serve-static-core' {
  interface Request {
    user?: User
  }
}
를 넣는다.
---------------------------------------------------
backend import가 작동이 되지 않을 때는
tsconfig.json에
"module": "commonjs",
commonjs로 바꿔야 한다.
---------------------------------------------------
react render 함수에 인자가 들어가는 경우
const ... = useCallback(value => () => {

});
이런 식으로 만든다.
----------------------------------------------------
const blocksFromHTML = convertFromHTML(editing);
    const state = ContentState.createFromBlockArray(
        blocksFromHTML.contentBlocks,
        blocksFromHTML.entityMap,
    );

    const [editorState, setEditorState] = useState(() => EditorState.createWithContent(state));
html을 editorState로 만드는 법이다. ContentState는 draft-js에서 import한다.

const [editorState, setEditorState] = useState(() => EditorState.createWithContent(state));
그리고 이 명령어로 editorState에 넣기
--------------------------------------------------------------------------------------
await Promise.all(scategories.map(async (s: Scategory) => {
    const posts = await Post.findAll({
        where: { ScategoryId: s.id },
        order: [['createdAt', 'DESC']],
    });
    return await Promise.all(posts.map((p: Post) => {
        return Post.destroy({ where: { id: p.id } })
    }));
}));
이 코드를 통해서 Bcategory를 제거할 때 미리 구해둔 scategory에 속하는 게시글을 모두 지우게 하였다.
await Promise.all 중첩